/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-07-22 15:03:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class brand_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("     <!-- 这个isELIgnored必须加上！否则不识别EL表达式-->\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Title</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div id=\"app\">\n");
      out.write("<h2>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(", welcome!</h2>\n");
      out.write("\n");
      out.write("<input type=\"button\" value=\"新增\" id=\"add\"><br>\n");
      out.write("\n");
      out.write("<hr>\n");
      out.write("<table id=\"brandTable\" border=\"1\" cellspacing=\"0\" width=\"80%\">\n");
      out.write("    <tr>\n");
      out.write("        <th>序号</th>\n");
      out.write("        <th>品牌名称</th>\n");
      out.write("        <th>企业名称</th>\n");
      out.write("        <th>排序</th>\n");
      out.write("        <th>品牌介绍</th>\n");
      out.write("        <th>状态</th>\n");
      out.write("        <th>操作</th>\n");
      out.write("    </tr>\n");
      out.write("    <!--\n");
      out.write("        使用v-for遍历tr\n");
      out.write("    -->\n");
      out.write("    <tr v-for=\"(brand,i) in brands\" align=\"center\">\n");
      out.write("        <td>{{brand.id}}</td>\n");
      out.write("        <td>{{brand.brandName}}</td>\n");
      out.write("        <td>{{brand.companyName}}</td>\n");
      out.write("        <td>{{brand.ordered}}</td>\n");
      out.write("        <td>{{brand.description}}</td>\n");
      out.write("        <td>{{brand.statusStr}}</td>\n");
      out.write("        <td><a :href=\"'/LoginDemo/selectByIdServlet?id=' + brand.id\">修改</a>\n");
      out.write("            <a href=\"#\">删除</a></td>\n");
      out.write("    </tr>\n");
      out.write("\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script src=\"js/axios-0.18.0.js\"></script>\n");
      out.write("<script src=\"js/vue.js\"></script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    document.getElementById(\"add\").onclick = function(){\n");
      out.write("        location.href = \"/LoginDemo/addBrand.html\";\n");
      out.write("\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // //1. 当页面加载完成后，发送ajax请求\n");
      out.write("    // window.onload = function () {\n");
      out.write("    //     //2. 发送ajax请求\n");
      out.write("    //     axios({\n");
      out.write("    //         method:\"get\",\n");
      out.write("    //         url:\"http://localhost:8080/LoginDemo/selectAllServlet\"\n");
      out.write("    //     }).then(function (resp) {\n");
      out.write("    //         //获取数据\n");
      out.write("    //         let brands = resp.data;\n");
      out.write("    //         let tableData = \" <tr>\\n\" +\n");
      out.write("    //             \"        <th>序号</th>\\n\" +\n");
      out.write("    //             \"        <th>品牌名称</th>\\n\" +\n");
      out.write("    //             \"        <th>企业名称</th>\\n\" +\n");
      out.write("    //             \"        <th>排序</th>\\n\" +\n");
      out.write("    //             \"        <th>品牌介绍</th>\\n\" +\n");
      out.write("    //             \"        <th>状态</th>\\n\" +\n");
      out.write("    //             \"        <th>操作</th>\\n\" +\n");
      out.write("    //             \"    </tr>\";\n");
      out.write("    //\n");
      out.write("    //         for (let i = 0; i < brands.length ; i++) {\n");
      out.write("    //             let brand = brands[i];\n");
      out.write("    //\n");
      out.write("    //             tableData += \"\\n\" +\n");
      out.write("    //                 \"    <tr align=\\\"center\\\">\\n\" +\n");
      out.write("    //                 \"        <td>\"+brand.id+\"</td>\\n\" +\n");
      out.write("    //                 \"        <td>\"+brand.brandName+\"</td>\\n\" +\n");
      out.write("    //                 \"        <td>\"+brand.companyName+\"</td>\\n\" +\n");
      out.write("    //                 \"        <td>\"+brand.ordered+\"</td>\\n\" +\n");
      out.write("    //                 \"        <td>\"+brand.description+\"</td>\\n\" +\n");
      out.write("    //                 \"        <td>\"+brand.status+\"</td>\\n\" +\n");
      out.write("    //                 \"\\n\" +\n");
      out.write("    //                 \"        <td><a href=\\\"/LoginDemo/selectByIdServlet?id=\" + brand.id + \"\\\">修改</a> <a href=\\\"#\\\">删除</a></td>\\n\" +\n");
      out.write("    //                 \"    </tr>\";\n");
      out.write("    //         }\n");
      out.write("    //         // 设置表格数据\n");
      out.write("    //         document.getElementById(\"brandTable\").innerHTML = tableData;\n");
      out.write("    //     })\n");
      out.write("    // }\n");
      out.write("\n");
      out.write("    new Vue({\n");
      out.write("        el:\"#app\",\n");
      out.write("        data(){\n");
      out.write("            return{\n");
      out.write("                brands:[]\n");
      out.write("            }\n");
      out.write("        },\n");
      out.write("        mounted(){\n");
      out.write("            // 页面加载完成后，发送异步请求\n");
      out.write("            //2. 发送ajax请求\n");
      out.write("            var _this = this;\n");
      out.write("                axios({\n");
      out.write("                    method:\"get\",\n");
      out.write("                    url:\"http://localhost:8080/LoginDemo/selectAllServlet\"\n");
      out.write("                }).then(function (resp) {\n");
      out.write("                    _this.brands = resp.data;       // this是windows对象(axios框架决定)，_this是vue对象\n");
      out.write("                })\n");
      out.write("        }\n");
      out.write("\n");
      out.write("    })\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
